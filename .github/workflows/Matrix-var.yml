name: Running matrix

on: push

jobs:
  # setup:
  #   runs-on: ubuntu-latest
  #   environment: staging
  #   outputs:
  #     matrix: ${{ steps.matrix.outputs.value }}
  #   steps:
  #     - id: matrix
  #       run: |
  #         echo 'Matrix env var is: ${{vars.MATRIX_VAR}} '
  #         echo '::set-output name=value::[${{vars.MATRIX_VAR}}]'
  # build:
  #   needs: [ setup ]
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix: ${{fromJSON(needs.setup.outputs.matrix)}}
  #   steps:
  #     - run: |
  #         echo "Value is: ${{toJSON(matrix.value.name) }}"

  step1:
    runs-on: ubuntu-latest
    environment: staging
    outputs:
      matrix: ${{ steps.matrix_setup.outputs.value }}    
    steps:
    - name: Setup
      id: matrix_setup
      run: echo "value=$(jq -r -c . <<< '${{vars.TENANT_DETAILS}}')" >> $GITHUB_OUTPUT

    # - name: Check
    #   run: jq . <<< '${{ steps.setup.outputs.matrix }}'

  step2:
    needs: [step1]
    runs-on: ubuntu-latest
    strategy:
      matrix: 
        include: ${{ fromJSON(needs.step1.outputs.matrix) }}
    # steps:
    # - run: |
    #     echo "Value of matrix is: ${{toJSON(matrix) }}"

    steps:
    - name: Check
      env:
        MATRIX: ${{ toJSON(matrix) }}
        APP_NAME: ${{ join(fromJSON(toJSON(matrix)).tenant_details.*.app-name, ', ') }}
        ARTIFACT_NAME: ${{ join(fromJSON(toJSON(matrix)).tenant_details.*.artifact-name, ', ') }}
        # NESTED: ${{ join(fromJSON(toJSON(matrix)).nested.*.val, ', ') }}
      run: |
        echo "MATRIX: $MATRIX"
        echo "APPNAME: [$APP_NAME]"
        echo "ARTIFACT_NAME: [$ARTIFACT_NAME]"
#        echo "NESTED: [$NESTED]"