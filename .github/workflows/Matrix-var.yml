name: Running matrix

on: 
  workflow_call:
    inputs:
      environment: 
        type: string
        required: true
        default: staging
    secrets:
      PUBLISH_PROFILE_SECRET_1:
        required: true
      PUBLISH_PROFILE_SECRET_2:
        required: true
        


jobs:
  # setup:
  #   runs-on: ubuntu-latest
  #   environment: staging
  #   outputs:
  #     matrix: ${{ steps.matrix.outputs.value }}
  #   steps:
  #     - id: matrix
  #       run: |
  #         echo 'Matrix env var is: ${{vars.MATRIX_VAR}} '
  #         echo '::set-output name=value::[${{vars.MATRIX_VAR}}]'
  # build:
  #   needs: [ setup ]
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix: ${{fromJSON(needs.setup.outputs.matrix)}}
  #   steps:
  #     - run: |
  #         echo "Value is: ${{toJSON(matrix.value.name) }}"

  step1:
    runs-on: ubuntu-latest
    environment: staging
    outputs:
      matrix: ${{ steps.matrix_setup.outputs.value }}    
    steps:
    - name: Setup
      id: matrix_setup
      run: echo "value=$(jq -r -c . <<< '${{vars.TENANT_DETAILS}}')" >> $GITHUB_OUTPUT

  step2:
    needs: [step1]
    runs-on: ubuntu-latest
    strategy:
      matrix: 
        include: ${{ fromJSON(needs.step1.outputs.matrix) }}
    # steps:
    # - run: |
    #     echo "Value of matrix is: ${{toJSON(matrix) }}"

    steps:
    - name: Check
      env:
        MATRIX: ${{ toJSON(matrix) }}
        APP_NAME: ${{ fromJSON(toJSON(matrix)).tenant_details.*.app-name}}
        PUBLISH_PROFILE: ${{ fromJSON(toJSON(matrix)).tenant_details.*.publish-profile }}
        # APP_SETTINGS: ${{ join(fromJSON(toJSON(matrix)).tenant_details.*.app-settings.*.name, ', ') }}
        # NESTED: ${{ join(fromJSON(toJSON(matrix)).nested.*.val, ', ') }}
        
      run: |
        echo "MATRIX: $MATRIX"
        echo "APPNAME: $APP_NAME"
        echo "PUBLISH PROFILE NAME: $PUBLISH_PROFILE"
#        echo "APP SETTINGS : [$APP_SETTINGS]"
#        echo "NESTED: [$NESTED]"